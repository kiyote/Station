name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the environment
        default: dev
        options:
        - dev
        - prod
  push:
    branches: 
      - main
    paths:
      - '**.tf'
      - '.github/workflows/deploy.yml'
  pull_request:
    paths:
      - '**.tf'
      - '.github/workflows/deploy.yml'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: 1.3.1
  PLAN_DIR: "${{ github.workspace }}"
  TF_VAR_repo_token: ${{ secrets.REPO_TOKEN }}

jobs:
  # Generates a plan in preparation for application
  plan:
    name: Terraform Plan
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: ${{ github.event.inputs.environment }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: hashicorp/setup-terraform@v2
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}
         
      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false -out="${{ env.PLAN_DIR }}/terraform.plan"
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

      - name: Store Plan
        uses: actions/upload-artifact@v3
        with:
          name: plan
          path: "${{ env.PLAN_DIR }}/terraform.plan"
          retention-days: 1
          if-no-files-found: error


  # Applies the terraform
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: ${{ github.event.inputs.environment }}
    needs:
      - plan
        
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Setup
        id: setup
        uses: hashicorp/setup-terraform@v2
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

      - name: Restore Plan
        id: plan
        uses: actions/download-artifact@v3
        with:
          name: plan

      - name: Terraform Apply
        id: apply
        run: terraform apply -input=false "${{ env.PLAN_DIR }}/terraform.plan"
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

      - name: Webclient Build URL
        id: url
        run: echo "::set-output name=BUILD_URL::$(terraform output -raw webclient_build_url)"

      - name: Trigger Webclient Build
        id: web_build
        run: |
          
          curl -X POST -d {} "${{ steps.url.outputs.BUILD_URL }}&operation=startbuild" -H "Content-Type:application/json"
