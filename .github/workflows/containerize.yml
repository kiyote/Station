name: Containerize

on:
  pull_request:
    paths:
    - 'docker-compose.yml'
    - 'Dockerfile'
    - '.github/workflows/containerize.yml'

  workflow_dispatch:
    inputs:
      push:
        description: 'Push to ECR'
        required: true
        type: choice
        default: 'true'
        options:
        - 'true'
        - 'false'
      environment:
        required: true
        type: choice
        description: Select the environment
        default: dev
        options:
        - dev
        - prod
jobs:
    build:
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment }}
        steps:
          - name: Check out repository
            uses: actions/checkout@v4
          
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-region: ca-central-1
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              role-duration-seconds: 900
              role-to-assume: arn:aws:iam::860568434255:role/station_deploy_${{ github.event.inputs.environment }}

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Build, tag, and push docker image to Amazon ECR
            if: github.event.inputs.push == 'true'
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: "station-${{ github.event.inputs.environment }}-server"
              IMAGE_TAG: ${{ github.sha }}-build${{ github.run_number }}
            run: |
              docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG